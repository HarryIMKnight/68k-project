00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 26/03/2025 13:27:45

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Extended Calculator Program
00000000                             3  * Written by : Harry Knight
00000000                             4  * Date       : 26/03/25
00000000                             5  * Description: Calculator App with Additional Numeric Operations
00000000                             6  *-----------------------------------------------------------
00000000                             7  * PROGRAM CONSTANTS
00000000  =0000000D                  8  CR              EQU     $0D     * Carriage return
00000000  =0000000A                  9  LF              EQU     $0A     * Line feed
00000000                            10  * START OF PROGRAM
00001000                            11          ORG     $1000
00001000                            12  START:
00001000                            13          * Display welcome message
00001000  43F9 0000112A             14          LEA     WELCOME_MSG,A1
00001006  103C 000E                 15          MOVE.B  #14,D0
0000100A  4E4F                      16          TRAP    #15
0000100C                            17  * INPUT FIRST NUMBER
0000100C                            18  INPUT_NUM1:
0000100C  43F9 00001148             19          LEA     PROMPT_NUM1,A1
00001012  103C 000E                 20          MOVE.B  #14,D0
00001016  4E4F                      21          TRAP    #15
00001018                            22          
00001018                            23          * Read first number
00001018  103C 0004                 24          MOVE.B  #4,D0
0000101C  4E4F                      25          TRAP    #15
0000101E  2A01                      26          MOVE.L  D1,D5           * Store first number in D5
00001020                            27  * INPUT SECOND NUMBER
00001020                            28  INPUT_NUM2:
00001020  43F9 0000115D             29          LEA     PROMPT_NUM2,A1
00001026  103C 000E                 30          MOVE.B  #14,D0
0000102A  4E4F                      31          TRAP    #15
0000102C                            32          
0000102C                            33          * Read second number
0000102C  103C 0004                 34          MOVE.B  #4,D0
00001030  4E4F                      35          TRAP    #15
00001032  2C01                      36          MOVE.L  D1,D6           * Store second number in D6
00001034                            37  * INPUT OPERATION
00001034                            38  INPUT_OP:
00001034  43F9 00001173             39          LEA     PROMPT_OP,A1
0000103A  103C 000E                 40          MOVE.B  #14,D0
0000103E  4E4F                      41          TRAP    #15
00001040                            42          
00001040                            43          * Read operation
00001040  103C 0005                 44          MOVE.B  #5,D0           * Change to read characters
00001044  4E4F                      45          TRAP    #15
00001046                            46          
00001046                            47          * Convert ASCII to actual number
00001046  0401 0030                 48          SUB.B   #'0',D1         * Convert ASCII to numeric value
0000104A                            49          
0000104A                            50          * Check operation range
0000104A  B23C 0001                 51          CMP.B   #1,D1           * Check if less than 1
0000104E  6D00 00B8                 52          BLT     INVALID_OP
00001052  B23C 0006                 53          CMP.B   #6,D1           * Check if greater than 6
00001056  6E00 00B0                 54          BGT     INVALID_OP
0000105A                            55  * PERFORM CALCULATION
0000105A                            56  CALCULATE:
0000105A                            57          * Compare and execute operation
0000105A  B23C 0001                 58          CMP.B   #1,D1           * Addition
0000105E  6700 002E                 59          BEQ     ADD_NUMS
00001062  B23C 0002                 60          CMP.B   #2,D1           * Subtraction
00001066  6700 002E                 61          BEQ     SUB_NUMS
0000106A  B23C 0003                 62          CMP.B   #3,D1           * Multiplication
0000106E  6700 002E                 63          BEQ     MUL_NUMS
00001072  B23C 0004                 64          CMP.B   #4,D1           * Division
00001076  6700 002E                 65          BEQ     DIV_NUMS
0000107A  B23C 0005                 66          CMP.B   #5,D1           * Modulus
0000107E  6700 0038                 67          BEQ     MOD_NUMS
00001082  B23C 0006                 68          CMP.B   #6,D1           * Percentage
00001086  6700 0048                 69          BEQ     PERC_NUMS
0000108A                            70          
0000108A                            71          * Invalid operation handler
0000108A  6000 007C                 72          BRA     INVALID_OP
0000108E                            73  * ADDITION SUBROUTINE
0000108E                            74  ADD_NUMS:
0000108E  2205                      75          MOVE.L  D5,D1
00001090  D286                      76          ADD.L   D6,D1
00001092  6000 0052                 77          BRA     DISPLAY_RESULT
00001096                            78  * SUBTRACTION SUBROUTINE
00001096                            79  SUB_NUMS:
00001096  2205                      80          MOVE.L  D5,D1
00001098  9286                      81          SUB.L   D6,D1
0000109A  6000 004A                 82          BRA     DISPLAY_RESULT
0000109E                            83  * MULTIPLICATION SUBROUTINE
0000109E                            84  MUL_NUMS:
0000109E  2205                      85          MOVE.L  D5,D1
000010A0  C3C6                      86          MULS    D6,D1
000010A2  6000 0042                 87          BRA     DISPLAY_RESULT
000010A6                            88  * DIVISION SUBROUTINE
000010A6                            89  DIV_NUMS:
000010A6                            90          * Check for division by zero
000010A6  BCBC 00000000             91          CMP.L   #0,D6
000010AC  6700 006A                 92          BEQ     DIV_ZERO
000010B0                            93          
000010B0  2205                      94          MOVE.L  D5,D1
000010B2  83C6                      95          DIVS    D6,D1
000010B4  6000 0030                 96          BRA     DISPLAY_RESULT
000010B8                            97  * MODULUS SUBROUTINE
000010B8                            98  MOD_NUMS:
000010B8                            99          * Check for division by zero
000010B8  BCBC 00000000            100          CMP.L   #0,D6
000010BE  6700 0058                101          BEQ     DIV_ZERO
000010C2                           102          
000010C2                           103          * Modulus calculation: D1 = D5 % D6
000010C2  2205                     104          MOVE.L  D5,D1
000010C4  83C6                     105          DIVS    D6,D1
000010C6  4841                     106          SWAP    D1              * Remainder is in upper word
000010C8  4881                     107          EXT.W    D1              * Sign extend the remainder
000010CA  48C1                     108          EXT.L   D1              * Extend to long word
000010CC  6000 0018                109          BRA     DISPLAY_RESULT
000010D0                           110  * PERCENTAGE SUBROUTINE
000010D0                           111  PERC_NUMS:
000010D0                           112          * Calculate percentage: (D5 / D6) * 100
000010D0                           113          * Check for division by zero
000010D0  BCBC 00000000            114          CMP.L   #0,D6
000010D6  6700 0040                115          BEQ     DIV_ZERO
000010DA                           116          
000010DA                           117          * Percentage calculation
000010DA  2205                     118          MOVE.L  D5,D1
000010DC  C3FC 0064                119          MULS    #100,D1         * Multiply first number by 100
000010E0  83C6                     120          DIVS    D6,D1           * Divide by second number
000010E2  6000 0002                121          BRA     DISPLAY_RESULT
000010E6                           122  * DISPLAY RESULT
000010E6                           123  DISPLAY_RESULT:
000010E6                           124          * Display result message
000010E6  43F9 000011F6            125          LEA     RESULT_MSG,A1
000010EC  103C 000E                126          MOVE.B  #14,D0
000010F0  4E4F                     127          TRAP    #15
000010F2                           128          
000010F2                           129          * Convert and display numeric result
000010F2  103C 0003                130          MOVE.B  #3,D0
000010F6  4E4F                     131          TRAP    #15
000010F8                           132          * New line
000010F8  43F9 000011FF            133          LEA     NEWLINE,A1
000010FE  103C 000E                134          MOVE.B  #14,D0
00001102  4E4F                     135          TRAP    #15
00001104  6000 001E                136          BRA     EXIT
00001108                           137  * ERROR HANDLING
00001108                           138  INVALID_OP:
00001108  43F9 00001202            139          LEA     ERR_OP_MSG,A1
0000110E  103C 000E                140          MOVE.B  #14,D0
00001112  4E4F                     141          TRAP    #15
00001114  6000 000E                142          BRA     EXIT
00001118                           143  DIV_ZERO:
00001118  43F9 00001217            144          LEA     ERR_DIV_ZERO,A1
0000111E  103C 000E                145          MOVE.B  #14,D0
00001122  4E4F                     146          TRAP    #15
00001124                           147  * PROGRAM EXIT
00001124                           148  EXIT:
00001124  103C 0009                149          MOVE.B  #9,D0
00001128  4E4F                     150          TRAP    #15
0000112A                           151  * DATA SECTION
0000112A                           152  * Message strings
0000112A= 45 78 74 65 6E 64 ...    153  WELCOME_MSG     DC.B    'Extended Calculator Program',CR,LF,0
00001148= 45 6E 74 65 72 20 ...    154  PROMPT_NUM1     DC.B    'Enter first number: ',0
0000115D= 45 6E 74 65 72 20 ...    155  PROMPT_NUM2     DC.B    'Enter second number: ',0
00001173= 45 6E 74 65 72 20 ...    156  PROMPT_OP       DC.B    'Enter operation:',CR,LF
00001185= 31 2E 20 41 64 64 ...    157                  DC.B    '1. Addition',CR,LF
00001192= 32 2E 20 53 75 62 ...    158                  DC.B    '2. Subtraction',CR,LF
000011A2= 33 2E 20 4D 75 6C ...    159                  DC.B    '3. Multiplication',CR,LF
000011B5= 34 2E 20 44 69 76 ...    160                  DC.B    '4. Division',CR,LF
000011C2= 35 2E 20 4D 6F 64 ...    161                  DC.B    '5. Modulus',CR,LF
000011CE= 36 2E 20 50 65 72 ...    162                  DC.B    '6. Percentage',CR,LF
000011DD= 43 68 6F 6F 73 65 ...    163                  DC.B    'Choose operation (1-6): ',0
000011F6= 52 65 73 75 6C 74 ...    164  RESULT_MSG      DC.B    'Result: ',0
000011FF= 0D 0A 00                 165  NEWLINE         DC.B    CR,LF,0
00001202                           166  * ERROR MESSAGES
00001202= 49 6E 76 61 6C 69 ...    167  ERR_OP_MSG      DC.B    'Invalid operation!',CR,LF,0
00001217= 45 72 72 6F 72 3A ...    168  ERR_DIV_ZERO    DC.B    'Error: Division by zero!',CR,LF,0
00001232                           169          END     START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADD_NUMS            108E
CALCULATE           105A
CR                  D
DISPLAY_RESULT      10E6
DIV_NUMS            10A6
DIV_ZERO            1118
ERR_DIV_ZERO        1217
ERR_OP_MSG          1202
EXIT                1124
INPUT_NUM1          100C
INPUT_NUM2          1020
INPUT_OP            1034
INVALID_OP          1108
LF                  A
MOD_NUMS            10B8
MUL_NUMS            109E
NEWLINE             11FF
PERC_NUMS           10D0
PROMPT_NUM1         1148
PROMPT_NUM2         115D
PROMPT_OP           1173
RESULT_MSG          11F6
START               1000
SUB_NUMS            1096
WELCOME_MSG         112A
